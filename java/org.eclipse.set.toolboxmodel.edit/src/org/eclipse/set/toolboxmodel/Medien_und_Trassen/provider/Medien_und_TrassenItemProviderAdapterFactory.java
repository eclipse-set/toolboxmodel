/**
 * /**
 * Copyright (c) 2023 DB Netz AG and others.
 *  
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v2.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v20.html
 */
package org.eclipse.set.toolboxmodel.Medien_und_Trassen.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.eclipse.set.toolboxmodel.Medien_und_Trassen.util.Medien_und_TrassenAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class Medien_und_TrassenItemProviderAdapterFactory extends Medien_und_TrassenAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Medien_und_TrassenItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Ader_Durchmesser_TypeClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Ader_Durchmesser_TypeClassItemProvider ader_Durchmesser_TypeClassItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Ader_Durchmesser_TypeClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAder_Durchmesser_TypeClassAdapter() {
		if (ader_Durchmesser_TypeClassItemProvider == null) {
			ader_Durchmesser_TypeClassItemProvider = new Ader_Durchmesser_TypeClassItemProvider(this);
		}

		return ader_Durchmesser_TypeClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Ader_Querschnitt_TypeClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Ader_Querschnitt_TypeClassItemProvider ader_Querschnitt_TypeClassItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Ader_Querschnitt_TypeClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAder_Querschnitt_TypeClassAdapter() {
		if (ader_Querschnitt_TypeClassItemProvider == null) {
			ader_Querschnitt_TypeClassItemProvider = new Ader_Querschnitt_TypeClassItemProvider(this);
		}

		return ader_Querschnitt_TypeClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Ader_Reserve_TypeClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Ader_Reserve_TypeClassItemProvider ader_Reserve_TypeClassItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Ader_Reserve_TypeClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAder_Reserve_TypeClassAdapter() {
		if (ader_Reserve_TypeClassItemProvider == null) {
			ader_Reserve_TypeClassItemProvider = new Ader_Reserve_TypeClassItemProvider(this);
		}

		return ader_Reserve_TypeClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Anzahl_Verseilelemente_TypeClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Anzahl_Verseilelemente_TypeClassItemProvider anzahl_Verseilelemente_TypeClassItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Anzahl_Verseilelemente_TypeClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnzahl_Verseilelemente_TypeClassAdapter() {
		if (anzahl_Verseilelemente_TypeClassItemProvider == null) {
			anzahl_Verseilelemente_TypeClassItemProvider = new Anzahl_Verseilelemente_TypeClassItemProvider(this);
		}

		return anzahl_Verseilelemente_TypeClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Bezeichnung_Kabel_TypeClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Bezeichnung_Kabel_TypeClassItemProvider bezeichnung_Kabel_TypeClassItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Bezeichnung_Kabel_TypeClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBezeichnung_Kabel_TypeClassAdapter() {
		if (bezeichnung_Kabel_TypeClassItemProvider == null) {
			bezeichnung_Kabel_TypeClassItemProvider = new Bezeichnung_Kabel_TypeClassItemProvider(this);
		}

		return bezeichnung_Kabel_TypeClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Bezeichnung_Kabel_Verteilpunkt_TypeClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Bezeichnung_Kabel_Verteilpunkt_TypeClassItemProvider bezeichnung_Kabel_Verteilpunkt_TypeClassItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Bezeichnung_Kabel_Verteilpunkt_TypeClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBezeichnung_Kabel_Verteilpunkt_TypeClassAdapter() {
		if (bezeichnung_Kabel_Verteilpunkt_TypeClassItemProvider == null) {
			bezeichnung_Kabel_Verteilpunkt_TypeClassItemProvider = new Bezeichnung_Kabel_Verteilpunkt_TypeClassItemProvider(this);
		}

		return bezeichnung_Kabel_Verteilpunkt_TypeClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Induktionsschutz_TypeClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Induktionsschutz_TypeClassItemProvider induktionsschutz_TypeClassItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Induktionsschutz_TypeClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInduktionsschutz_TypeClassAdapter() {
		if (induktionsschutz_TypeClassItemProvider == null) {
			induktionsschutz_TypeClassItemProvider = new Induktionsschutz_TypeClassItemProvider(this);
		}

		return induktionsschutz_TypeClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Kabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KabelItemProvider kabelItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Kabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKabelAdapter() {
		if (kabelItemProvider == null) {
			kabelItemProvider = new KabelItemProvider(this);
		}

		return kabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Kabel_Allg_AttributeGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Kabel_Allg_AttributeGroupItemProvider kabel_Allg_AttributeGroupItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Kabel_Allg_AttributeGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKabel_Allg_AttributeGroupAdapter() {
		if (kabel_Allg_AttributeGroupItemProvider == null) {
			kabel_Allg_AttributeGroupItemProvider = new Kabel_Allg_AttributeGroupItemProvider(this);
		}

		return kabel_Allg_AttributeGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Kabel_Art_TypeClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Kabel_Art_TypeClassItemProvider kabel_Art_TypeClassItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Kabel_Art_TypeClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKabel_Art_TypeClassAdapter() {
		if (kabel_Art_TypeClassItemProvider == null) {
			kabel_Art_TypeClassItemProvider = new Kabel_Art_TypeClassItemProvider(this);
		}

		return kabel_Art_TypeClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Kabel_Bezeichnung_AttributeGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Kabel_Bezeichnung_AttributeGroupItemProvider kabel_Bezeichnung_AttributeGroupItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Kabel_Bezeichnung_AttributeGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKabel_Bezeichnung_AttributeGroupAdapter() {
		if (kabel_Bezeichnung_AttributeGroupItemProvider == null) {
			kabel_Bezeichnung_AttributeGroupItemProvider = new Kabel_Bezeichnung_AttributeGroupItemProvider(this);
		}

		return kabel_Bezeichnung_AttributeGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Kabel_Element_AttributeGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Kabel_Element_AttributeGroupItemProvider kabel_Element_AttributeGroupItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Kabel_Element_AttributeGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKabel_Element_AttributeGroupAdapter() {
		if (kabel_Element_AttributeGroupItemProvider == null) {
			kabel_Element_AttributeGroupItemProvider = new Kabel_Element_AttributeGroupItemProvider(this);
		}

		return kabel_Element_AttributeGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Kabel_Laenge_TypeClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Kabel_Laenge_TypeClassItemProvider kabel_Laenge_TypeClassItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Kabel_Laenge_TypeClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKabel_Laenge_TypeClassAdapter() {
		if (kabel_Laenge_TypeClassItemProvider == null) {
			kabel_Laenge_TypeClassItemProvider = new Kabel_Laenge_TypeClassItemProvider(this);
		}

		return kabel_Laenge_TypeClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Kabel_Typ_TypeClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Kabel_Typ_TypeClassItemProvider kabel_Typ_TypeClassItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Kabel_Typ_TypeClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKabel_Typ_TypeClassAdapter() {
		if (kabel_Typ_TypeClassItemProvider == null) {
			kabel_Typ_TypeClassItemProvider = new Kabel_Typ_TypeClassItemProvider(this);
		}

		return kabel_Typ_TypeClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Kabel_Verteilpunkt} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Kabel_VerteilpunktItemProvider kabel_VerteilpunktItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Kabel_Verteilpunkt}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKabel_VerteilpunktAdapter() {
		if (kabel_VerteilpunktItemProvider == null) {
			kabel_VerteilpunktItemProvider = new Kabel_VerteilpunktItemProvider(this);
		}

		return kabel_VerteilpunktItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Kabel_Verteilpunkt_Art_TypeClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Kabel_Verteilpunkt_Art_TypeClassItemProvider kabel_Verteilpunkt_Art_TypeClassItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Kabel_Verteilpunkt_Art_TypeClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKabel_Verteilpunkt_Art_TypeClassAdapter() {
		if (kabel_Verteilpunkt_Art_TypeClassItemProvider == null) {
			kabel_Verteilpunkt_Art_TypeClassItemProvider = new Kabel_Verteilpunkt_Art_TypeClassItemProvider(this);
		}

		return kabel_Verteilpunkt_Art_TypeClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Kabel_Verteilpunkt_Bezeichnung_AttributeGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Kabel_Verteilpunkt_Bezeichnung_AttributeGroupItemProvider kabel_Verteilpunkt_Bezeichnung_AttributeGroupItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Kabel_Verteilpunkt_Bezeichnung_AttributeGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKabel_Verteilpunkt_Bezeichnung_AttributeGroupAdapter() {
		if (kabel_Verteilpunkt_Bezeichnung_AttributeGroupItemProvider == null) {
			kabel_Verteilpunkt_Bezeichnung_AttributeGroupItemProvider = new Kabel_Verteilpunkt_Bezeichnung_AttributeGroupItemProvider(this);
		}

		return kabel_Verteilpunkt_Bezeichnung_AttributeGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Nagetierschutz_TypeClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Nagetierschutz_TypeClassItemProvider nagetierschutz_TypeClassItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Nagetierschutz_TypeClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNagetierschutz_TypeClassAdapter() {
		if (nagetierschutz_TypeClassItemProvider == null) {
			nagetierschutz_TypeClassItemProvider = new Nagetierschutz_TypeClassItemProvider(this);
		}

		return nagetierschutz_TypeClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Trasse_Kante} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Trasse_KanteItemProvider trasse_KanteItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Trasse_Kante}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTrasse_KanteAdapter() {
		if (trasse_KanteItemProvider == null) {
			trasse_KanteItemProvider = new Trasse_KanteItemProvider(this);
		}

		return trasse_KanteItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Trasse_Kante_Art_TypeClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Trasse_Kante_Art_TypeClassItemProvider trasse_Kante_Art_TypeClassItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Trasse_Kante_Art_TypeClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTrasse_Kante_Art_TypeClassAdapter() {
		if (trasse_Kante_Art_TypeClassItemProvider == null) {
			trasse_Kante_Art_TypeClassItemProvider = new Trasse_Kante_Art_TypeClassItemProvider(this);
		}

		return trasse_Kante_Art_TypeClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Trasse_Knoten} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Trasse_KnotenItemProvider trasse_KnotenItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Trasse_Knoten}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTrasse_KnotenAdapter() {
		if (trasse_KnotenItemProvider == null) {
			trasse_KnotenItemProvider = new Trasse_KnotenItemProvider(this);
		}

		return trasse_KnotenItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Trasse_Knoten_Art_TypeClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Trasse_Knoten_Art_TypeClassItemProvider trasse_Knoten_Art_TypeClassItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Trasse_Knoten_Art_TypeClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTrasse_Knoten_Art_TypeClassAdapter() {
		if (trasse_Knoten_Art_TypeClassItemProvider == null) {
			trasse_Knoten_Art_TypeClassItemProvider = new Trasse_Knoten_Art_TypeClassItemProvider(this);
		}

		return trasse_Knoten_Art_TypeClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Trasse_Nutzer_TypeClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Trasse_Nutzer_TypeClassItemProvider trasse_Nutzer_TypeClassItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Trasse_Nutzer_TypeClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTrasse_Nutzer_TypeClassAdapter() {
		if (trasse_Nutzer_TypeClassItemProvider == null) {
			trasse_Nutzer_TypeClassItemProvider = new Trasse_Nutzer_TypeClassItemProvider(this);
		}

		return trasse_Nutzer_TypeClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Verseilart_TypeClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Verseilart_TypeClassItemProvider verseilart_TypeClassItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.set.toolboxmodel.Medien_und_Trassen.Verseilart_TypeClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVerseilart_TypeClassAdapter() {
		if (verseilart_TypeClassItemProvider == null) {
			verseilart_TypeClassItemProvider = new Verseilart_TypeClassItemProvider(this);
		}

		return verseilart_TypeClassItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (ader_Durchmesser_TypeClassItemProvider != null) ader_Durchmesser_TypeClassItemProvider.dispose();
		if (ader_Querschnitt_TypeClassItemProvider != null) ader_Querschnitt_TypeClassItemProvider.dispose();
		if (ader_Reserve_TypeClassItemProvider != null) ader_Reserve_TypeClassItemProvider.dispose();
		if (anzahl_Verseilelemente_TypeClassItemProvider != null) anzahl_Verseilelemente_TypeClassItemProvider.dispose();
		if (bezeichnung_Kabel_TypeClassItemProvider != null) bezeichnung_Kabel_TypeClassItemProvider.dispose();
		if (bezeichnung_Kabel_Verteilpunkt_TypeClassItemProvider != null) bezeichnung_Kabel_Verteilpunkt_TypeClassItemProvider.dispose();
		if (induktionsschutz_TypeClassItemProvider != null) induktionsschutz_TypeClassItemProvider.dispose();
		if (kabelItemProvider != null) kabelItemProvider.dispose();
		if (kabel_Allg_AttributeGroupItemProvider != null) kabel_Allg_AttributeGroupItemProvider.dispose();
		if (kabel_Art_TypeClassItemProvider != null) kabel_Art_TypeClassItemProvider.dispose();
		if (kabel_Bezeichnung_AttributeGroupItemProvider != null) kabel_Bezeichnung_AttributeGroupItemProvider.dispose();
		if (kabel_Element_AttributeGroupItemProvider != null) kabel_Element_AttributeGroupItemProvider.dispose();
		if (kabel_Laenge_TypeClassItemProvider != null) kabel_Laenge_TypeClassItemProvider.dispose();
		if (kabel_Typ_TypeClassItemProvider != null) kabel_Typ_TypeClassItemProvider.dispose();
		if (kabel_VerteilpunktItemProvider != null) kabel_VerteilpunktItemProvider.dispose();
		if (kabel_Verteilpunkt_Art_TypeClassItemProvider != null) kabel_Verteilpunkt_Art_TypeClassItemProvider.dispose();
		if (kabel_Verteilpunkt_Bezeichnung_AttributeGroupItemProvider != null) kabel_Verteilpunkt_Bezeichnung_AttributeGroupItemProvider.dispose();
		if (nagetierschutz_TypeClassItemProvider != null) nagetierschutz_TypeClassItemProvider.dispose();
		if (trasse_KanteItemProvider != null) trasse_KanteItemProvider.dispose();
		if (trasse_Kante_Art_TypeClassItemProvider != null) trasse_Kante_Art_TypeClassItemProvider.dispose();
		if (trasse_KnotenItemProvider != null) trasse_KnotenItemProvider.dispose();
		if (trasse_Knoten_Art_TypeClassItemProvider != null) trasse_Knoten_Art_TypeClassItemProvider.dispose();
		if (trasse_Nutzer_TypeClassItemProvider != null) trasse_Nutzer_TypeClassItemProvider.dispose();
		if (verseilart_TypeClassItemProvider != null) verseilart_TypeClassItemProvider.dispose();
	}

}
